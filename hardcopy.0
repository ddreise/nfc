 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "bsp/board.h"
//#include "tusb.h"

#include "pico/stdlib.h"
#include "pico/binary_info.h"
#include "hardware/i2c.h"

#include "led.h"
#include "tusb_config.h"

//#include "test.h"


/*------------- MAIN -------------*/
int main(void)
{
   //board_init();             // Initialize the board for led and uart
  i2c_init(i2c0, 400000);   // Initialize I2C. Set as 400 kbps (can't go faster than this because the
Pico is limited to this)
  tusb_init();              // Initialize TinyUSB
  gpio_set_function(PICO_DEFAULT_I2C_SDA_PIN, GPIO_FUNC_I2C); // Set default i2c sda pin to i2c
  gpio_set_function(PICO_DEFAULT_I2C_SCL_PIN, GPIO_FUNC_I2C); // Set default i2c scl pin to i2c
  gpio_pull_up(PICO_DEFAULT_I2C_SCL_PIN); // pullup i2c scl resistor pin
  gpio_pull_up(PICO_DEFAULT_I2C_SDA_PIN); // pullup i2c sda resistor pin */

  printf("--------------------- NEW LOG ---------------------\n");


/*   while (1)
  {
    // nfc task
    //tud_task();             // usb task
    //led_blinking_task();    // led task
  } */

  //i2c_test();

  return 0;
}
"main.c" 67L, 2287C written
ddreise@desktop-linux:~/pico/nfc/src$
